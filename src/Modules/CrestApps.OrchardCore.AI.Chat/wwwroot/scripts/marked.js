/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e36) { throw _e36; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e37) { didErr = true; err = _e37; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
/**
 * marked v15.0.7 - a markdown parser
 * Copyright (c) 2011-2025, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/markedjs/marked
 */
!function (e, t) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self).marked = {});
}(this, function (e) {
  "use strict";

  function t() {
    return {
      async: !1,
      breaks: !1,
      extensions: null,
      gfm: !0,
      hooks: null,
      pedantic: !1,
      renderer: null,
      silent: !1,
      tokenizer: null,
      walkTokens: null
    };
  }
  function n(t) {
    e.defaults = t;
  }
  e.defaults = {
    async: !1,
    breaks: !1,
    extensions: null,
    gfm: !0,
    hooks: null,
    pedantic: !1,
    renderer: null,
    silent: !1,
    tokenizer: null,
    walkTokens: null
  };
  var s = {
    exec: function exec() {
      return null;
    }
  };
  function r(e) {
    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
    var n = "string" == typeof e ? e : e.source;
    var s = {
      replace: function replace(e, t) {
        var r = "string" == typeof t ? t : t.source;
        return r = r.replace(i.caret, "$1"), n = n.replace(e, r), s;
      },
      getRegex: function getRegex() {
        return new RegExp(n, t);
      }
    };
    return s;
  }
  var i = {
      codeRemoveIndent: /^(?: {1,4}| {0,3}\t)/gm,
      outputLinkReplace: /\\([\[\]])/g,
      indentCodeCompensation: /^(\s+)(?:```)/,
      beginningSpace: /^\s+/,
      endingHash: /#$/,
      startingSpaceChar: /^ /,
      endingSpaceChar: / $/,
      nonSpaceChar: /[^ ]/,
      newLineCharGlobal: /\n/g,
      tabCharGlobal: /\t/g,
      multipleSpaceGlobal: /\s+/g,
      blankLine: /^[ \t]*$/,
      doubleBlankLine: /\n[ \t]*\n[ \t]*$/,
      blockquoteStart: /^ {0,3}>/,
      blockquoteSetextReplace: /\n {0,3}((?:=+|-+) *)(?=\n|$)/g,
      blockquoteSetextReplace2: /^ {0,3}>[ \t]?/gm,
      listReplaceTabs: /^\t+/,
      listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,
      listIsTask: /^\[[ xX]\] /,
      listReplaceTask: /^\[[ xX]\] +/,
      anyLine: /\n.*\n/,
      hrefBrackets: /^<(.*)>$/,
      tableDelimiter: /[:|]/,
      tableAlignChars: /^\||\| *$/g,
      tableRowBlankLine: /\n[ \t]*$/,
      tableAlignRight: /^ *-+: *$/,
      tableAlignCenter: /^ *:-+: *$/,
      tableAlignLeft: /^ *:-+ *$/,
      startATag: /^<a /i,
      endATag: /^<\/a>/i,
      startPreScriptTag: /^<(pre|code|kbd|script)(\s|>)/i,
      endPreScriptTag: /^<\/(pre|code|kbd|script)(\s|>)/i,
      startAngleBracket: /^</,
      endAngleBracket: />$/,
      pedanticHrefTitle: /^([^'"]*[^\s])\s+(['"])(.*)\2/,
      unicodeAlphaNumeric: /(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDF50-\uDF59\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEC0-\uDED3\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDCD0-\uDCEB\uDCF0-\uDCF9\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])/,
      escapeTest: /[&<>"']/,
      escapeReplace: /[&<>"']/g,
      escapeTestNoEncode: /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,
      escapeReplaceNoEncode: /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g,
      unescapeTest: /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,
      caret: /(^|[^\[])\^/g,
      percentDecode: /%25/g,
      findPipe: /\|/g,
      splitPipe: / \|/,
      slashPipe: /\\\|/g,
      carriageReturn: /\r\n|\r/g,
      spaceLine: /^ +$/gm,
      notSpaceStart: /^\S*/,
      endingNewline: /\n$/,
      listItemRegex: function listItemRegex(e) {
        return new RegExp("^( {0,3}".concat(e, ")((?:[\t ][^\\n]*)?(?:\\n|$))"));
      },
      nextBulletRegex: function nextBulletRegex(e) {
        return new RegExp("^ {0,".concat(Math.min(3, e - 1), "}(?:[*+-]|\\d{1,9}[.)])((?:[ \t][^\\n]*)?(?:\\n|$))"));
      },
      hrRegex: function hrRegex(e) {
        return new RegExp("^ {0,".concat(Math.min(3, e - 1), "}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)"));
      },
      fencesBeginRegex: function fencesBeginRegex(e) {
        return new RegExp("^ {0,".concat(Math.min(3, e - 1), "}(?:```|~~~)"));
      },
      headingBeginRegex: function headingBeginRegex(e) {
        return new RegExp("^ {0,".concat(Math.min(3, e - 1), "}#"));
      },
      htmlBeginRegex: function htmlBeginRegex(e) {
        return new RegExp("^ {0,".concat(Math.min(3, e - 1), "}<(?:[a-z].*>|!--)"), "i");
      }
    },
    l = /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
    o = /(?:[*+-]|\d{1,9}[.)])/,
    a = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
    c = r(a).replace(/bull/g, o).replace(/blockCode/g, /(?: {4}| {0,3}\t)/).replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g, / {0,3}>/).replace(/heading/g, / {0,3}#{1,6}/).replace(/html/g, / {0,3}<[^\n>]+>\n/).replace(/\|table/g, "").getRegex(),
    h = r(a).replace(/bull/g, o).replace(/blockCode/g, /(?: {4}| {0,3}\t)/).replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g, / {0,3}>/).replace(/heading/g, / {0,3}#{1,6}/).replace(/html/g, / {0,3}<[^\n>]+>\n/).replace(/table/g, / {0,3}\|?(?:[:\- ]*\|)+[\:\- ]*\n/).getRegex(),
    p = /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
    u = /(?!\s*\])(?:\\.|[^\[\]\\])+/,
    g = r(/^ {0,3}\[(label)\]: *(?:\n[ \t]*)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n[ \t]*)?| *\n[ \t]*)(title))? *(?:\n+|$)/).replace("label", u).replace("title", /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/).getRegex(),
    k = r(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/).replace(/bull/g, o).getRegex(),
    d = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",
    f = /<!--(?:-?>|[\s\S]*?(?:-->|$))/,
    x = r("^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ \t]*)+\\n|$))", "i").replace("comment", f).replace("tag", d).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),
    b = r(p).replace("hr", l).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", d).getRegex(),
    w = {
      blockquote: r(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/).replace("paragraph", b).getRegex(),
      code: /^((?: {4}| {0,3}\t)[^\n]+(?:\n(?:[ \t]*(?:\n|$))*)?)+/,
      def: g,
      fences: /^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
      heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
      hr: l,
      html: x,
      lheading: c,
      list: k,
      newline: /^(?:[ \t]*(?:\n|$))+/,
      paragraph: b,
      table: s,
      text: /^[^\n]+/
    },
    m = r("^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)").replace("hr", l).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("blockquote", " {0,3}>").replace("code", "(?: {4}| {0,3}\t)[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", d).getRegex(),
    y = _objectSpread(_objectSpread({}, w), {}, {
      lheading: h,
      table: m,
      paragraph: r(p).replace("hr", l).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("|lheading", "").replace("table", m).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", d).getRegex()
    }),
    $ = _objectSpread(_objectSpread({}, w), {}, {
      html: r("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment", f).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
      def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
      heading: /^(#{1,6})(.*)(?:\n+|$)/,
      fences: s,
      lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
      paragraph: r(p).replace("hr", l).replace("heading", " *#{1,6} *[^\n]").replace("lheading", c).replace("|table", "").replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").replace("|tag", "").getRegex()
    }),
    R = /^( {2,}|\\)\n(?!\s*$)/,
    S = /(?:[!-\/:-@\[-`\{-~\xA1-\xA9\xAB\xAC\xAE-\xB1\xB4\xB6-\xB8\xBB\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u037E\u0384\u0385\u0387\u03F6\u0482\u055A-\u055F\u0589\u058A\u058D-\u058F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0606-\u060F\u061B\u061D-\u061F\u066A-\u066D\u06D4\u06DE\u06E9\u06FD\u06FE\u0700-\u070D\u07F6-\u07F9\u07FE\u07FF\u0830-\u083E\u085E\u0888\u0964\u0965\u0970\u09F2\u09F3\u09FA\u09FB\u09FD\u0A76\u0AF0\u0AF1\u0B70\u0BF3-\u0BFA\u0C77\u0C7F\u0C84\u0D4F\u0D79\u0DF4\u0E3F\u0E4F\u0E5A\u0E5B\u0F01-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F85\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE-\u0FDA\u104A-\u104F\u109E\u109F\u10FB\u1360-\u1368\u1390-\u1399\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DB\u1800-\u180A\u1940\u1944\u1945\u19DE-\u19FF\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B6A\u1B74-\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2010-\u2027\u2030-\u205E\u207A-\u207E\u208A-\u208E\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2775\u2794-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E5D\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3001-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u303F\u309B\u309C\u30A0\u30FB\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAA77-\uAA79\uAADE\uAADF\uAAF0\uAAF1\uAB5B\uAB6A\uAB6B\uABEB\uFB29\uFBB2-\uFBC2\uFD3E-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD00-\uDD02\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDC77\uDC78\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEC8\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3F]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFD5-\uDFF1\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3F\uDF44\uDF45]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F[\uDC9C\uDC9F]|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE8B]|\uD838[\uDD4F\uDEFF]|\uD83A[\uDD5E\uDD5F]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA])/,
    T = /(?:[\t-\r -\/:-@\[-`\{-~\xA0-\xA9\xAB\xAC\xAE-\xB1\xB4\xB6-\xB8\xBB\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u037E\u0384\u0385\u0387\u03F6\u0482\u055A-\u055F\u0589\u058A\u058D-\u058F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0606-\u060F\u061B\u061D-\u061F\u066A-\u066D\u06D4\u06DE\u06E9\u06FD\u06FE\u0700-\u070D\u07F6-\u07F9\u07FE\u07FF\u0830-\u083E\u085E\u0888\u0964\u0965\u0970\u09F2\u09F3\u09FA\u09FB\u09FD\u0A76\u0AF0\u0AF1\u0B70\u0BF3-\u0BFA\u0C77\u0C7F\u0C84\u0D4F\u0D79\u0DF4\u0E3F\u0E4F\u0E5A\u0E5B\u0F01-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F85\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE-\u0FDA\u104A-\u104F\u109E\u109F\u10FB\u1360-\u1368\u1390-\u1399\u1400\u166D\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DB\u1800-\u180A\u1940\u1944\u1945\u19DE-\u19FF\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B6A\u1B74-\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2000-\u200A\u2010-\u2029\u202F-\u205F\u207A-\u207E\u208A-\u208E\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2775\u2794-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E5D\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u303F\u309B\u309C\u30A0\u30FB\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAA77-\uAA79\uAADE\uAADF\uAAF0\uAAF1\uAB5B\uAB6A\uAB6B\uABEB\uFB29\uFBB2-\uFBC2\uFD3E-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFEFF\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD00-\uDD02\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDC77\uDC78\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEC8\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3F]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFD5-\uDFF1\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3F\uDF44\uDF45]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F[\uDC9C\uDC9F]|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE8B]|\uD838[\uDD4F\uDEFF]|\uD83A[\uDD5E\uDD5F]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA])/,
    z = /(?:[\0-\x08\x0E-\x1F0-9A-Za-z\x7F-\x9F\xAA\xAD\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376-\u037D\u037F-\u0383\u0386\u0388-\u03F5\u03F7-\u0481\u0483-\u0559\u0560-\u0588\u058B\u058C\u0590-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7-\u05F2\u05F5-\u0605\u0610-\u061A\u061C\u0620-\u0669\u066E-\u06D3\u06D5-\u06DD\u06DF-\u06E8\u06EA-\u06FC\u06FF\u070E-\u07F5\u07FA-\u07FD\u0800-\u082F\u083F-\u085D\u085F-\u0887\u0889-\u0963\u0966-\u096F\u0971-\u09F1\u09F4-\u09F9\u09FC\u09FE-\u0A75\u0A77-\u0AEF\u0AF2-\u0B6F\u0B71-\u0BF2\u0BFB-\u0C76\u0C78-\u0C7E\u0C80-\u0C83\u0C85-\u0D4E\u0D50-\u0D78\u0D7A-\u0DF3\u0DF5-\u0E3E\u0E40-\u0E4E\u0E50-\u0E59\u0E5C-\u0F00\u0F18\u0F19\u0F20-\u0F33\u0F35\u0F37\u0F39\u0F3E-\u0F84\u0F86-\u0FBD\u0FC6\u0FCD\u0FDB-\u1049\u1050-\u109D\u10A0-\u10FA\u10FC-\u135F\u1369-\u138F\u139A-\u13FF\u1401-\u166C\u166F-\u167F\u1681-\u169A\u169D-\u16EA\u16EE-\u1734\u1737-\u17D3\u17D7\u17DC-\u17FF\u180B-\u193F\u1941-\u1943\u1946-\u19DD\u1A00-\u1A1D\u1A20-\u1A9F\u1AA7\u1AAE-\u1B59\u1B6B-\u1B73\u1B7F-\u1BFB\u1C00-\u1C3A\u1C40-\u1C7D\u1C80-\u1CBF\u1CC8-\u1CD2\u1CD4-\u1FBC\u1FBE\u1FC2-\u1FCC\u1FD0-\u1FDC\u1FE0-\u1FEC\u1FF0-\u1FFC\u1FFF\u200B-\u200F\u202A-\u202E\u2060-\u2079\u207F-\u2089\u208F-\u209F\u20C1-\u20FF\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u218C-\u218F\u2427-\u243F\u244B-\u249B\u24EA-\u24FF\u2776-\u2793\u2B74\u2B75\u2B96\u2C00-\u2CE4\u2CEB-\u2CF8\u2CFD\u2D00-\u2D6F\u2D71-\u2DFF\u2E2F\u2E5E-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3040-\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u318F\u3192-\u3195\u31A0-\u31BF\u31E4-\u31EE\u31F0-\u31FF\u321F-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48F\uA4C7-\uA4FD\uA500-\uA60C\uA610-\uA672\uA674-\uA67D\uA67F-\uA6F1\uA6F8-\uA6FF\uA717-\uA71F\uA722-\uA788\uA78B-\uA827\uA82C-\uA835\uA83A-\uA873\uA878-\uA8CD\uA8D0-\uA8F7\uA8FB\uA8FD-\uA92D\uA930-\uA95E\uA960-\uA9C0\uA9CE-\uA9DD\uA9E0-\uAA5B\uAA60-\uAA76\uAA7A-\uAADD\uAAE0-\uAAEF\uAAF2-\uAB5A\uAB5C-\uAB69\uAB6C-\uABEA\uABEC-\uD7FF\uE000-\uFB28\uFB2A-\uFBB1\uFBC3-\uFD3D\uFD50-\uFDCE\uFDD0-\uFDFB\uFE00-\uFE0F\uFE1A-\uFE2F\uFE53\uFE67\uFE6C-\uFEFE\uFF00\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFDF\uFFE7\uFFEF-\uFFFB\uFFFE\uFFFF]|\uD800[\uDC00-\uDCFF\uDD03-\uDD36\uDD40-\uDD78\uDD8A\uDD8B\uDD8F\uDD9D-\uDD9F\uDDA1-\uDDCF\uDDFD-\uDF9E\uDFA0-\uDFCF\uDFD1-\uDFFF]|\uD801[\uDC00-\uDD6E\uDD70-\uDFFF]|\uD802[\uDC00-\uDC56\uDC58-\uDC76\uDC79-\uDD1E\uDD20-\uDD3E\uDD40-\uDE4F\uDE59-\uDE7E\uDE80-\uDEC7\uDEC9-\uDEEF\uDEF7-\uDF38\uDF40-\uDF98\uDF9D-\uDFFF]|\uD803[\uDC00-\uDEAC\uDEAE-\uDF54\uDF5A-\uDF85\uDF8A-\uDFFF]|\uD804[\uDC00-\uDC46\uDC4E-\uDCBA\uDCBD\uDCC2-\uDD3F\uDD44-\uDD73\uDD76-\uDDC4\uDDC9-\uDDCC\uDDCE-\uDDDA\uDDDC\uDDE0-\uDE37\uDE3E-\uDEA8\uDEAA-\uDFFF]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC5C\uDC5E-\uDCC5\uDCC7-\uDDC0\uDDD8-\uDE40\uDE44-\uDE5F\uDE6D-\uDEB8\uDEBA-\uDF3B\uDF40-\uDFFF]|\uD806[\uDC00-\uDC3A\uDC3C-\uDD43\uDD47-\uDDE1\uDDE3-\uDE3E\uDE47-\uDE99\uDE9D\uDEA3-\uDEFF\uDF0A-\uDFFF]|\uD807[\uDC00-\uDC40\uDC46-\uDC6F\uDC72-\uDEF6\uDEF9-\uDF42\uDF50-\uDFD4\uDFF2-\uDFFE]|[\uD808\uD80A\uD80C-\uD819\uD81C-\uD82E\uD830-\uD832\uD837\uD839\uD83F-\uDBFF][\uDC00-\uDFFF]|\uD809[\uDC00-\uDC6F\uDC75-\uDFFF]|\uD80B[\uDC00-\uDFF0\uDFF3-\uDFFF]|\uD81A[\uDC00-\uDE6D\uDE70-\uDEF4\uDEF6-\uDF36\uDF40-\uDF43\uDF46-\uDFFF]|\uD81B[\uDC00-\uDE96\uDE9B-\uDFE1\uDFE3-\uDFFF]|\uD82F[\uDC00-\uDC9B\uDC9D\uDC9E\uDCA0-\uDFFF]|\uD833[\uDC00-\uDF4F\uDFC4-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDD65-\uDD69\uDD6D-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDDEB-\uDDFF\uDE42-\uDE44\uDE46-\uDEFF\uDF57-\uDFFF]|\uD835[\uDC00-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE8C-\uDFFF]|\uD838[\uDC00-\uDD4E\uDD50-\uDEFE\uDF00-\uDFFF]|\uD83A[\uDC00-\uDD5D\uDD60-\uDFFF]|\uD83B[\uDC00-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDD2D\uDD2F-\uDEEF\uDEF2-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCC0\uDCD0\uDCF6-\uDD0C\uDDAE-\uDDE5\uDE03-\uDE0F\uDE3C-\uDE3F\uDE49-\uDE4F\uDE52-\uDE5F\uDE66-\uDEFF]|\uD83D[\uDED8-\uDEDB\uDEED-\uDEEF\uDEFD-\uDEFF\uDF77-\uDF7A\uDFDA-\uDFDF\uDFEC-\uDFEF\uDFF1-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE\uDCAF\uDCB2-\uDCFF\uDE54-\uDE5F\uDE6E\uDE6F\uDE7D-\uDE7F\uDE89-\uDE8F\uDEBE\uDEC6-\uDECD\uDEDC-\uDEDF\uDEE9-\uDEEF\uDEF9-\uDEFF\uDF93\uDFCB-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/,
    A = r(/^((?![*_])punctSpace)/, "u").replace(/punctSpace/g, T).getRegex(),
    _ = /(?!~)(?:[!-\/:-@\[-`\{-~\xA1-\xA9\xAB\xAC\xAE-\xB1\xB4\xB6-\xB8\xBB\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u037E\u0384\u0385\u0387\u03F6\u0482\u055A-\u055F\u0589\u058A\u058D-\u058F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0606-\u060F\u061B\u061D-\u061F\u066A-\u066D\u06D4\u06DE\u06E9\u06FD\u06FE\u0700-\u070D\u07F6-\u07F9\u07FE\u07FF\u0830-\u083E\u085E\u0888\u0964\u0965\u0970\u09F2\u09F3\u09FA\u09FB\u09FD\u0A76\u0AF0\u0AF1\u0B70\u0BF3-\u0BFA\u0C77\u0C7F\u0C84\u0D4F\u0D79\u0DF4\u0E3F\u0E4F\u0E5A\u0E5B\u0F01-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F85\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE-\u0FDA\u104A-\u104F\u109E\u109F\u10FB\u1360-\u1368\u1390-\u1399\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DB\u1800-\u180A\u1940\u1944\u1945\u19DE-\u19FF\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B6A\u1B74-\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2010-\u2027\u2030-\u205E\u207A-\u207E\u208A-\u208E\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2775\u2794-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E5D\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3001-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u303F\u309B\u309C\u30A0\u30FB\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAA77-\uAA79\uAADE\uAADF\uAAF0\uAAF1\uAB5B\uAB6A\uAB6B\uABEB\uFB29\uFBB2-\uFBC2\uFD3E-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD00-\uDD02\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDC77\uDC78\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEC8\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3F]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFD5-\uDFF1\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3F\uDF44\uDF45]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F[\uDC9C\uDC9F]|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE8B]|\uD838[\uDD4F\uDEFF]|\uD83A[\uDD5E\uDD5F]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA])/,
    P = /^(?:\*+(?:((?!\*)punct)|[^\s*]))|^_+(?:((?!_)punct)|([^\s_]))/,
    I = r(P, "u").replace(/punct/g, S).getRegex(),
    L = r(P, "u").replace(/punct/g, _).getRegex(),
    B = "^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)punct(\\*+)(?=[\\s]|$)|notPunctSpace(\\*+)(?!\\*)(?=punctSpace|$)|(?!\\*)punctSpace(\\*+)(?=notPunctSpace)|[\\s](\\*+)(?!\\*)(?=punct)|(?!\\*)punct(\\*+)(?!\\*)(?=punct)|notPunctSpace(\\*+)(?=notPunctSpace)",
    C = r(B, "gu").replace(/notPunctSpace/g, z).replace(/punctSpace/g, T).replace(/punct/g, S).getRegex(),
    q = r(B, "gu").replace(/notPunctSpace/g, /(?:(?:[\0-\x08\x0E-\x1F0-9A-Za-z\x7F-\x9F\xAA\xAD\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376-\u037D\u037F-\u0383\u0386\u0388-\u03F5\u03F7-\u0481\u0483-\u0559\u0560-\u0588\u058B\u058C\u0590-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7-\u05F2\u05F5-\u0605\u0610-\u061A\u061C\u0620-\u0669\u066E-\u06D3\u06D5-\u06DD\u06DF-\u06E8\u06EA-\u06FC\u06FF\u070E-\u07F5\u07FA-\u07FD\u0800-\u082F\u083F-\u085D\u085F-\u0887\u0889-\u0963\u0966-\u096F\u0971-\u09F1\u09F4-\u09F9\u09FC\u09FE-\u0A75\u0A77-\u0AEF\u0AF2-\u0B6F\u0B71-\u0BF2\u0BFB-\u0C76\u0C78-\u0C7E\u0C80-\u0C83\u0C85-\u0D4E\u0D50-\u0D78\u0D7A-\u0DF3\u0DF5-\u0E3E\u0E40-\u0E4E\u0E50-\u0E59\u0E5C-\u0F00\u0F18\u0F19\u0F20-\u0F33\u0F35\u0F37\u0F39\u0F3E-\u0F84\u0F86-\u0FBD\u0FC6\u0FCD\u0FDB-\u1049\u1050-\u109D\u10A0-\u10FA\u10FC-\u135F\u1369-\u138F\u139A-\u13FF\u1401-\u166C\u166F-\u167F\u1681-\u169A\u169D-\u16EA\u16EE-\u1734\u1737-\u17D3\u17D7\u17DC-\u17FF\u180B-\u193F\u1941-\u1943\u1946-\u19DD\u1A00-\u1A1D\u1A20-\u1A9F\u1AA7\u1AAE-\u1B59\u1B6B-\u1B73\u1B7F-\u1BFB\u1C00-\u1C3A\u1C40-\u1C7D\u1C80-\u1CBF\u1CC8-\u1CD2\u1CD4-\u1FBC\u1FBE\u1FC2-\u1FCC\u1FD0-\u1FDC\u1FE0-\u1FEC\u1FF0-\u1FFC\u1FFF\u200B-\u200F\u202A-\u202E\u2060-\u2079\u207F-\u2089\u208F-\u209F\u20C1-\u20FF\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u218C-\u218F\u2427-\u243F\u244B-\u249B\u24EA-\u24FF\u2776-\u2793\u2B74\u2B75\u2B96\u2C00-\u2CE4\u2CEB-\u2CF8\u2CFD\u2D00-\u2D6F\u2D71-\u2DFF\u2E2F\u2E5E-\u2E7F\u2E9A\u2EF4-\u2EFF\u2FD6-\u2FEF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3040-\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u318F\u3192-\u3195\u31A0-\u31BF\u31E4-\u31EE\u31F0-\u31FF\u321F-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48F\uA4C7-\uA4FD\uA500-\uA60C\uA610-\uA672\uA674-\uA67D\uA67F-\uA6F1\uA6F8-\uA6FF\uA717-\uA71F\uA722-\uA788\uA78B-\uA827\uA82C-\uA835\uA83A-\uA873\uA878-\uA8CD\uA8D0-\uA8F7\uA8FB\uA8FD-\uA92D\uA930-\uA95E\uA960-\uA9C0\uA9CE-\uA9DD\uA9E0-\uAA5B\uAA60-\uAA76\uAA7A-\uAADD\uAAE0-\uAAEF\uAAF2-\uAB5A\uAB5C-\uAB69\uAB6C-\uABEA\uABEC-\uD7FF\uE000-\uFB28\uFB2A-\uFBB1\uFBC3-\uFD3D\uFD50-\uFDCE\uFDD0-\uFDFB\uFE00-\uFE0F\uFE1A-\uFE2F\uFE53\uFE67\uFE6C-\uFEFE\uFF00\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFDF\uFFE7\uFFEF-\uFFFB\uFFFE\uFFFF]|\uD800[\uDC00-\uDCFF\uDD03-\uDD36\uDD40-\uDD78\uDD8A\uDD8B\uDD8F\uDD9D-\uDD9F\uDDA1-\uDDCF\uDDFD-\uDF9E\uDFA0-\uDFCF\uDFD1-\uDFFF]|\uD801[\uDC00-\uDD6E\uDD70-\uDFFF]|\uD802[\uDC00-\uDC56\uDC58-\uDC76\uDC79-\uDD1E\uDD20-\uDD3E\uDD40-\uDE4F\uDE59-\uDE7E\uDE80-\uDEC7\uDEC9-\uDEEF\uDEF7-\uDF38\uDF40-\uDF98\uDF9D-\uDFFF]|\uD803[\uDC00-\uDEAC\uDEAE-\uDF54\uDF5A-\uDF85\uDF8A-\uDFFF]|\uD804[\uDC00-\uDC46\uDC4E-\uDCBA\uDCBD\uDCC2-\uDD3F\uDD44-\uDD73\uDD76-\uDDC4\uDDC9-\uDDCC\uDDCE-\uDDDA\uDDDC\uDDE0-\uDE37\uDE3E-\uDEA8\uDEAA-\uDFFF]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC5C\uDC5E-\uDCC5\uDCC7-\uDDC0\uDDD8-\uDE40\uDE44-\uDE5F\uDE6D-\uDEB8\uDEBA-\uDF3B\uDF40-\uDFFF]|\uD806[\uDC00-\uDC3A\uDC3C-\uDD43\uDD47-\uDDE1\uDDE3-\uDE3E\uDE47-\uDE99\uDE9D\uDEA3-\uDEFF\uDF0A-\uDFFF]|\uD807[\uDC00-\uDC40\uDC46-\uDC6F\uDC72-\uDEF6\uDEF9-\uDF42\uDF50-\uDFD4\uDFF2-\uDFFE]|[\uD808\uD80A\uD80C-\uD819\uD81C-\uD82E\uD830-\uD832\uD837\uD839\uD83F-\uDBFF][\uDC00-\uDFFF]|\uD809[\uDC00-\uDC6F\uDC75-\uDFFF]|\uD80B[\uDC00-\uDFF0\uDFF3-\uDFFF]|\uD81A[\uDC00-\uDE6D\uDE70-\uDEF4\uDEF6-\uDF36\uDF40-\uDF43\uDF46-\uDFFF]|\uD81B[\uDC00-\uDE96\uDE9B-\uDFE1\uDFE3-\uDFFF]|\uD82F[\uDC00-\uDC9B\uDC9D\uDC9E\uDCA0-\uDFFF]|\uD833[\uDC00-\uDF4F\uDFC4-\uDFFF]|\uD834[\uDCF6-\uDCFF\uDD27\uDD28\uDD65-\uDD69\uDD6D-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDDEB-\uDDFF\uDE42-\uDE44\uDE46-\uDEFF\uDF57-\uDFFF]|\uD835[\uDC00-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE8C-\uDFFF]|\uD838[\uDC00-\uDD4E\uDD50-\uDEFE\uDF00-\uDFFF]|\uD83A[\uDC00-\uDD5D\uDD60-\uDFFF]|\uD83B[\uDC00-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDD2D\uDD2F-\uDEEF\uDEF2-\uDFFF]|\uD83C[\uDC2C-\uDC2F\uDC94-\uDC9F\uDCAF\uDCB0\uDCC0\uDCD0\uDCF6-\uDD0C\uDDAE-\uDDE5\uDE03-\uDE0F\uDE3C-\uDE3F\uDE49-\uDE4F\uDE52-\uDE5F\uDE66-\uDEFF]|\uD83D[\uDED8-\uDEDB\uDEED-\uDEEF\uDEFD-\uDEFF\uDF77-\uDF7A\uDFDA-\uDFDF\uDFEC-\uDFEF\uDFF1-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE\uDCAF\uDCB2-\uDCFF\uDE54-\uDE5F\uDE6E\uDE6F\uDE7D-\uDE7F\uDE89-\uDE8F\uDEBE\uDEC6-\uDECD\uDEDC-\uDEDF\uDEE9-\uDEEF\uDEF9-\uDEFF\uDF93\uDFCB-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])|~)/).replace(/punctSpace/g, /(?!~)(?:[\t-\r -\/:-@\[-`\{-~\xA0-\xA9\xAB\xAC\xAE-\xB1\xB4\xB6-\xB8\xBB\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u037E\u0384\u0385\u0387\u03F6\u0482\u055A-\u055F\u0589\u058A\u058D-\u058F\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0606-\u060F\u061B\u061D-\u061F\u066A-\u066D\u06D4\u06DE\u06E9\u06FD\u06FE\u0700-\u070D\u07F6-\u07F9\u07FE\u07FF\u0830-\u083E\u085E\u0888\u0964\u0965\u0970\u09F2\u09F3\u09FA\u09FB\u09FD\u0A76\u0AF0\u0AF1\u0B70\u0BF3-\u0BFA\u0C77\u0C7F\u0C84\u0D4F\u0D79\u0DF4\u0E3F\u0E4F\u0E5A\u0E5B\u0F01-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F85\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE-\u0FDA\u104A-\u104F\u109E\u109F\u10FB\u1360-\u1368\u1390-\u1399\u1400\u166D\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DB\u1800-\u180A\u1940\u1944\u1945\u19DE-\u19FF\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B6A\u1B74-\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2000-\u200A\u2010-\u2029\u202F-\u205F\u207A-\u207E\u208A-\u208E\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2775\u2794-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E5D\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u303F\u309B\u309C\u30A0\u30FB\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAA77-\uAA79\uAADE\uAADF\uAAF0\uAAF1\uAB5B\uAB6A\uAB6B\uABEB\uFB29\uFBB2-\uFBC2\uFD3E-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE66\uFE68-\uFE6B\uFEFF\uFF01-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF40\uFF5B-\uFF65\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD00-\uDD02\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDC77\uDC78\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEC8\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3F]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFD5-\uDFF1\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3F\uDF44\uDF45]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F[\uDC9C\uDC9F]|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE8B]|\uD838[\uDD4F\uDEFF]|\uD83A[\uDD5E\uDD5F]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA])/).replace(/punct/g, _).getRegex(),
    E = r("^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)", "gu").replace(/notPunctSpace/g, z).replace(/punctSpace/g, T).replace(/punct/g, S).getRegex(),
    Z = r(/\\(punct)/, "gu").replace(/punct/g, S).getRegex(),
    v = r(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/).replace("scheme", /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace("email", /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(),
    D = r(f).replace("(?:--\x3e|$)", "--\x3e").getRegex(),
    M = r("^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>").replace("comment", D).replace("attribute", /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/).getRegex(),
    O = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,
    Q = r(/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/).replace("label", O).replace("href", /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/).replace("title", /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/).getRegex(),
    j = r(/^!?\[(label)\]\[(ref)\]/).replace("label", O).replace("ref", u).getRegex(),
    N = r(/^!?\[(ref)\](?:\[\])?/).replace("ref", u).getRegex(),
    G = {
      _backpedal: s,
      anyPunctuation: Z,
      autolink: v,
      blockSkip: /\[[^[\]]*?\]\((?:\\.|[^\\\(\)]|\((?:\\.|[^\\\(\)])*\))*\)|`[^`]*?`|<[^<>]*?>/g,
      br: R,
      code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
      del: s,
      emStrongLDelim: I,
      emStrongRDelimAst: C,
      emStrongRDelimUnd: E,
      escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
      link: Q,
      nolink: N,
      punctuation: A,
      reflink: j,
      reflinkSearch: r("reflink|nolink(?!\\()", "g").replace("reflink", j).replace("nolink", N).getRegex(),
      tag: M,
      text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
      url: s
    },
    H = _objectSpread(_objectSpread({}, G), {}, {
      link: r(/^!?\[(label)\]\((.*?)\)/).replace("label", O).getRegex(),
      reflink: r(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", O).getRegex()
    }),
    X = _objectSpread(_objectSpread({}, G), {}, {
      emStrongRDelimAst: q,
      emStrongLDelim: L,
      url: r(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/, "i").replace("email", /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),
      _backpedal: /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,
      del: /^(~~?)(?=[^\s~])((?:\\.|[^\\])*?(?:\\.|[^\s~\\]))\1(?=[^~]|$)/,
      text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
    }),
    F = _objectSpread(_objectSpread({}, X), {}, {
      br: r(R).replace("{2,}", "*").getRegex(),
      text: r(X.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
    }),
    U = {
      normal: w,
      gfm: y,
      pedantic: $
    },
    J = {
      normal: G,
      gfm: X,
      breaks: F,
      pedantic: H
    },
    K = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;"
    },
    V = function V(e) {
      return K[e];
    };
  function W(e, t) {
    if (t) {
      if (i.escapeTest.test(e)) return e.replace(i.escapeReplace, V);
    } else if (i.escapeTestNoEncode.test(e)) return e.replace(i.escapeReplaceNoEncode, V);
    return e;
  }
  function Y(e) {
    try {
      e = encodeURI(e).replace(i.percentDecode, "%");
    } catch (_unused) {
      return null;
    }
    return e;
  }
  function ee(e, t) {
    var _n$at;
    var n = e.replace(i.findPipe, function (e, t, n) {
      var s = !1,
        r = t;
      for (; --r >= 0 && "\\" === n[r];) s = !s;
      return s ? "|" : " |";
    }).split(i.splitPipe);
    var s = 0;
    if (n[0].trim() || n.shift(), n.length > 0 && !((_n$at = n.at(-1)) !== null && _n$at !== void 0 && _n$at.trim()) && n.pop(), t) if (n.length > t) n.splice(t);else for (; n.length < t;) n.push("");
    for (; s < n.length; s++) n[s] = n[s].trim().replace(i.slashPipe, "|");
    return n;
  }
  function te(e, t, n) {
    var s = e.length;
    if (0 === s) return "";
    var r = 0;
    for (; r < s;) {
      if (e.charAt(s - r - 1) !== t) break;
      r++;
    }
    return e.slice(0, s - r);
  }
  function ne(e, t, n, s, r) {
    var i = t.href,
      l = t.title || null,
      o = e[1].replace(r.other.outputLinkReplace, "$1");
    if ("!" !== e[0].charAt(0)) {
      s.state.inLink = !0;
      var _e = {
        type: "link",
        raw: n,
        href: i,
        title: l,
        text: o,
        tokens: s.inlineTokens(o)
      };
      return s.state.inLink = !1, _e;
    }
    return {
      type: "image",
      raw: n,
      href: i,
      title: l,
      text: o
    };
  }
  var se = /*#__PURE__*/function () {
    function se(t) {
      _classCallCheck(this, se);
      _defineProperty(this, "options", void 0);
      _defineProperty(this, "rules", void 0);
      _defineProperty(this, "lexer", void 0);
      this.options = t || e.defaults;
    }
    return _createClass(se, [{
      key: "space",
      value: function space(e) {
        var t = this.rules.block.newline.exec(e);
        if (t && t[0].length > 0) return {
          type: "space",
          raw: t[0]
        };
      }
    }, {
      key: "code",
      value: function code(e) {
        var t = this.rules.block.code.exec(e);
        if (t) {
          var _e2 = t[0].replace(this.rules.other.codeRemoveIndent, "");
          return {
            type: "code",
            raw: t[0],
            codeBlockStyle: "indented",
            text: this.options.pedantic ? _e2 : te(_e2, "\n")
          };
        }
      }
    }, {
      key: "fences",
      value: function fences(e) {
        var t = this.rules.block.fences.exec(e);
        if (t) {
          var _e3 = t[0],
            _n = function (e, t, n) {
              var s = e.match(n.other.indentCodeCompensation);
              if (null === s) return t;
              var r = s[1];
              return t.split("\n").map(function (e) {
                var t = e.match(n.other.beginningSpace);
                if (null === t) return e;
                var _t = _slicedToArray(t, 1),
                  s = _t[0];
                return s.length >= r.length ? e.slice(r.length) : e;
              }).join("\n");
            }(_e3, t[3] || "", this.rules);
          return {
            type: "code",
            raw: _e3,
            lang: t[2] ? t[2].trim().replace(this.rules.inline.anyPunctuation, "$1") : t[2],
            text: _n
          };
        }
      }
    }, {
      key: "heading",
      value: function heading(e) {
        var t = this.rules.block.heading.exec(e);
        if (t) {
          var _e4 = t[2].trim();
          if (this.rules.other.endingHash.test(_e4)) {
            var _t2 = te(_e4, "#");
            this.options.pedantic ? _e4 = _t2.trim() : _t2 && !this.rules.other.endingSpaceChar.test(_t2) || (_e4 = _t2.trim());
          }
          return {
            type: "heading",
            raw: t[0],
            depth: t[1].length,
            text: _e4,
            tokens: this.lexer.inline(_e4)
          };
        }
      }
    }, {
      key: "hr",
      value: function hr(e) {
        var t = this.rules.block.hr.exec(e);
        if (t) return {
          type: "hr",
          raw: te(t[0], "\n")
        };
      }
    }, {
      key: "blockquote",
      value: function blockquote(e) {
        var t = this.rules.block.blockquote.exec(e);
        if (t) {
          var _e5 = te(t[0], "\n").split("\n"),
            _n2 = "",
            _s = "";
          var _r = [];
          for (; _e5.length > 0;) {
            var _t3 = !1;
            var _i = [];
            var _l = void 0;
            for (_l = 0; _l < _e5.length; _l++) if (this.rules.other.blockquoteStart.test(_e5[_l])) _i.push(_e5[_l]), _t3 = !0;else {
              if (_t3) break;
              _i.push(_e5[_l]);
            }
            _e5 = _e5.slice(_l);
            var _o = _i.join("\n"),
              _a = _o.replace(this.rules.other.blockquoteSetextReplace, "\n    $1").replace(this.rules.other.blockquoteSetextReplace2, "");
            _n2 = _n2 ? "".concat(_n2, "\n").concat(_o) : _o, _s = _s ? "".concat(_s, "\n").concat(_a) : _a;
            var _c = this.lexer.state.top;
            if (this.lexer.state.top = !0, this.lexer.blockTokens(_a, _r, !0), this.lexer.state.top = _c, 0 === _e5.length) break;
            var _h = _r.at(-1);
            if ("code" === (_h === null || _h === void 0 ? void 0 : _h.type)) break;
            if ("blockquote" === (_h === null || _h === void 0 ? void 0 : _h.type)) {
              var _t4 = _h,
                _i2 = _t4.raw + "\n" + _e5.join("\n"),
                _l2 = this.blockquote(_i2);
              _r[_r.length - 1] = _l2, _n2 = _n2.substring(0, _n2.length - _t4.raw.length) + _l2.raw, _s = _s.substring(0, _s.length - _t4.text.length) + _l2.text;
              break;
            }
            if ("list" !== (_h === null || _h === void 0 ? void 0 : _h.type)) ;else {
              var _t5 = _h,
                _i3 = _t5.raw + "\n" + _e5.join("\n"),
                _l3 = this.list(_i3);
              _r[_r.length - 1] = _l3, _n2 = _n2.substring(0, _n2.length - _h.raw.length) + _l3.raw, _s = _s.substring(0, _s.length - _t5.raw.length) + _l3.raw, _e5 = _i3.substring(_r.at(-1).raw.length).split("\n");
            }
          }
          return {
            type: "blockquote",
            raw: _n2,
            tokens: _r,
            text: _s
          };
        }
      }
    }, {
      key: "list",
      value: function list(e) {
        var _this = this;
        var t = this.rules.block.list.exec(e);
        if (t) {
          var _n3 = t[1].trim();
          var _s2 = _n3.length > 1,
            _r2 = {
              type: "list",
              raw: "",
              ordered: _s2,
              start: _s2 ? +_n3.slice(0, -1) : "",
              loose: !1,
              items: []
            };
          _n3 = _s2 ? "\\d{1,9}\\".concat(_n3.slice(-1)) : "\\".concat(_n3), this.options.pedantic && (_n3 = _s2 ? _n3 : "[*+-]");
          var _i4 = this.rules.other.listItemRegex(_n3);
          var _l4 = !1;
          for (; e;) {
            var _n4 = !1,
              _s3 = "",
              _o2 = "";
            if (!(t = _i4.exec(e))) break;
            if (this.rules.block.hr.test(e)) break;
            _s3 = t[0], e = e.substring(_s3.length);
            var _a2 = t[2].split("\n", 1)[0].replace(this.rules.other.listReplaceTabs, function (e) {
                return " ".repeat(3 * e.length);
              }),
              _c2 = e.split("\n", 1)[0],
              _h2 = !_a2.trim(),
              _p = 0;
            if (this.options.pedantic ? (_p = 2, _o2 = _a2.trimStart()) : _h2 ? _p = t[1].length + 1 : (_p = t[2].search(this.rules.other.nonSpaceChar), _p = _p > 4 ? 1 : _p, _o2 = _a2.slice(_p), _p += t[1].length), _h2 && this.rules.other.blankLine.test(_c2) && (_s3 += _c2 + "\n", e = e.substring(_c2.length + 1), _n4 = !0), !_n4) {
              var _t6 = this.rules.other.nextBulletRegex(_p),
                _n5 = this.rules.other.hrRegex(_p),
                _r3 = this.rules.other.fencesBeginRegex(_p),
                _i5 = this.rules.other.headingBeginRegex(_p),
                _l5 = this.rules.other.htmlBeginRegex(_p);
              for (; e;) {
                var _u = e.split("\n", 1)[0];
                var _g = void 0;
                if (_c2 = _u, this.options.pedantic ? (_c2 = _c2.replace(this.rules.other.listReplaceNesting, "  "), _g = _c2) : _g = _c2.replace(this.rules.other.tabCharGlobal, "    "), _r3.test(_c2)) break;
                if (_i5.test(_c2)) break;
                if (_l5.test(_c2)) break;
                if (_t6.test(_c2)) break;
                if (_n5.test(_c2)) break;
                if (_g.search(this.rules.other.nonSpaceChar) >= _p || !_c2.trim()) _o2 += "\n" + _g.slice(_p);else {
                  if (_h2) break;
                  if (_a2.replace(this.rules.other.tabCharGlobal, "    ").search(this.rules.other.nonSpaceChar) >= 4) break;
                  if (_r3.test(_a2)) break;
                  if (_i5.test(_a2)) break;
                  if (_n5.test(_a2)) break;
                  _o2 += "\n" + _c2;
                }
                _h2 || _c2.trim() || (_h2 = !0), _s3 += _u + "\n", e = e.substring(_u.length + 1), _a2 = _g.slice(_p);
              }
            }
            _r2.loose || (_l4 ? _r2.loose = !0 : this.rules.other.doubleBlankLine.test(_s3) && (_l4 = !0));
            var _u2 = void 0,
              _g2 = null;
            this.options.gfm && (_g2 = this.rules.other.listIsTask.exec(_o2), _g2 && (_u2 = "[ ] " !== _g2[0], _o2 = _o2.replace(this.rules.other.listReplaceTask, ""))), _r2.items.push({
              type: "list_item",
              raw: _s3,
              task: !!_g2,
              checked: _u2,
              loose: !1,
              text: _o2,
              tokens: []
            }), _r2.raw += _s3;
          }
          var _o3 = _r2.items.at(-1);
          if (!_o3) return;
          _o3.raw = _o3.raw.trimEnd(), _o3.text = _o3.text.trimEnd(), _r2.raw = _r2.raw.trimEnd();
          for (var _e6 = 0; _e6 < _r2.items.length; _e6++) if (this.lexer.state.top = !1, _r2.items[_e6].tokens = this.lexer.blockTokens(_r2.items[_e6].text, []), !_r2.loose) {
            var _t7 = _r2.items[_e6].tokens.filter(function (e) {
                return "space" === e.type;
              }),
              _n6 = _t7.length > 0 && _t7.some(function (e) {
                return _this.rules.other.anyLine.test(e.raw);
              });
            _r2.loose = _n6;
          }
          if (_r2.loose) for (var _e7 = 0; _e7 < _r2.items.length; _e7++) _r2.items[_e7].loose = !0;
          return _r2;
        }
      }
    }, {
      key: "html",
      value: function html(e) {
        var t = this.rules.block.html.exec(e);
        if (t) {
          return {
            type: "html",
            block: !0,
            raw: t[0],
            pre: "pre" === t[1] || "script" === t[1] || "style" === t[1],
            text: t[0]
          };
        }
      }
    }, {
      key: "def",
      value: function def(e) {
        var t = this.rules.block.def.exec(e);
        if (t) {
          var _e8 = t[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, " "),
            _n7 = t[2] ? t[2].replace(this.rules.other.hrefBrackets, "$1").replace(this.rules.inline.anyPunctuation, "$1") : "",
            _s4 = t[3] ? t[3].substring(1, t[3].length - 1).replace(this.rules.inline.anyPunctuation, "$1") : t[3];
          return {
            type: "def",
            tag: _e8,
            raw: t[0],
            href: _n7,
            title: _s4
          };
        }
      }
    }, {
      key: "table",
      value: function table(e) {
        var _t$,
          _this2 = this;
        var t = this.rules.block.table.exec(e);
        if (!t) return;
        if (!this.rules.other.tableDelimiter.test(t[2])) return;
        var n = ee(t[1]),
          s = t[2].replace(this.rules.other.tableAlignChars, "").split("|"),
          r = (_t$ = t[3]) !== null && _t$ !== void 0 && _t$.trim() ? t[3].replace(this.rules.other.tableRowBlankLine, "").split("\n") : [],
          i = {
            type: "table",
            raw: t[0],
            header: [],
            align: [],
            rows: []
          };
        if (n.length === s.length) {
          var _iterator = _createForOfIteratorHelper(s),
            _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var _e10 = _step.value;
              this.rules.other.tableAlignRight.test(_e10) ? i.align.push("right") : this.rules.other.tableAlignCenter.test(_e10) ? i.align.push("center") : this.rules.other.tableAlignLeft.test(_e10) ? i.align.push("left") : i.align.push(null);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          for (var _e9 = 0; _e9 < n.length; _e9++) i.header.push({
            text: n[_e9],
            tokens: this.lexer.inline(n[_e9]),
            header: !0,
            align: i.align[_e9]
          });
          var _iterator2 = _createForOfIteratorHelper(r),
            _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var _e11 = _step2.value;
              i.rows.push(ee(_e11, i.header.length).map(function (e, t) {
                return {
                  text: e,
                  tokens: _this2.lexer.inline(e),
                  header: !1,
                  align: i.align[t]
                };
              }));
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          return i;
        }
      }
    }, {
      key: "lheading",
      value: function lheading(e) {
        var t = this.rules.block.lheading.exec(e);
        if (t) return {
          type: "heading",
          raw: t[0],
          depth: "=" === t[2].charAt(0) ? 1 : 2,
          text: t[1],
          tokens: this.lexer.inline(t[1])
        };
      }
    }, {
      key: "paragraph",
      value: function paragraph(e) {
        var t = this.rules.block.paragraph.exec(e);
        if (t) {
          var _e12 = "\n" === t[1].charAt(t[1].length - 1) ? t[1].slice(0, -1) : t[1];
          return {
            type: "paragraph",
            raw: t[0],
            text: _e12,
            tokens: this.lexer.inline(_e12)
          };
        }
      }
    }, {
      key: "text",
      value: function text(e) {
        var t = this.rules.block.text.exec(e);
        if (t) return {
          type: "text",
          raw: t[0],
          text: t[0],
          tokens: this.lexer.inline(t[0])
        };
      }
    }, {
      key: "escape",
      value: function escape(e) {
        var t = this.rules.inline.escape.exec(e);
        if (t) return {
          type: "escape",
          raw: t[0],
          text: t[1]
        };
      }
    }, {
      key: "tag",
      value: function tag(e) {
        var t = this.rules.inline.tag.exec(e);
        if (t) return !this.lexer.state.inLink && this.rules.other.startATag.test(t[0]) ? this.lexer.state.inLink = !0 : this.lexer.state.inLink && this.rules.other.endATag.test(t[0]) && (this.lexer.state.inLink = !1), !this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(t[0]) ? this.lexer.state.inRawBlock = !0 : this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(t[0]) && (this.lexer.state.inRawBlock = !1), {
          type: "html",
          raw: t[0],
          inLink: this.lexer.state.inLink,
          inRawBlock: this.lexer.state.inRawBlock,
          block: !1,
          text: t[0]
        };
      }
    }, {
      key: "link",
      value: function link(e) {
        var t = this.rules.inline.link.exec(e);
        if (t) {
          var _e13 = t[2].trim();
          if (!this.options.pedantic && this.rules.other.startAngleBracket.test(_e13)) {
            if (!this.rules.other.endAngleBracket.test(_e13)) return;
            var _t8 = te(_e13.slice(0, -1), "\\");
            if ((_e13.length - _t8.length) % 2 == 0) return;
          } else {
            var _e14 = function (e, t) {
              if (-1 === e.indexOf(t[1])) return -1;
              var n = 0;
              for (var _s5 = 0; _s5 < e.length; _s5++) if ("\\" === e[_s5]) _s5++;else if (e[_s5] === t[0]) n++;else if (e[_s5] === t[1] && (n--, n < 0)) return _s5;
              return -1;
            }(t[2], "()");
            if (_e14 > -1) {
              var _n8 = (0 === t[0].indexOf("!") ? 5 : 4) + t[1].length + _e14;
              t[2] = t[2].substring(0, _e14), t[0] = t[0].substring(0, _n8).trim(), t[3] = "";
            }
          }
          var _n9 = t[2],
            _s6 = "";
          if (this.options.pedantic) {
            var _e15 = this.rules.other.pedanticHrefTitle.exec(_n9);
            _e15 && (_n9 = _e15[1], _s6 = _e15[3]);
          } else _s6 = t[3] ? t[3].slice(1, -1) : "";
          return _n9 = _n9.trim(), this.rules.other.startAngleBracket.test(_n9) && (_n9 = this.options.pedantic && !this.rules.other.endAngleBracket.test(_e13) ? _n9.slice(1) : _n9.slice(1, -1)), ne(t, {
            href: _n9 ? _n9.replace(this.rules.inline.anyPunctuation, "$1") : _n9,
            title: _s6 ? _s6.replace(this.rules.inline.anyPunctuation, "$1") : _s6
          }, t[0], this.lexer, this.rules);
        }
      }
    }, {
      key: "reflink",
      value: function reflink(e, t) {
        var n;
        if ((n = this.rules.inline.reflink.exec(e)) || (n = this.rules.inline.nolink.exec(e))) {
          var _e16 = t[(n[2] || n[1]).replace(this.rules.other.multipleSpaceGlobal, " ").toLowerCase()];
          if (!_e16) {
            var _e17 = n[0].charAt(0);
            return {
              type: "text",
              raw: _e17,
              text: _e17
            };
          }
          return ne(n, _e16, n[0], this.lexer, this.rules);
        }
      }
    }, {
      key: "emStrong",
      value: function emStrong(e, t) {
        var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
        var s = this.rules.inline.emStrongLDelim.exec(e);
        if (!s) return;
        if (s[3] && n.match(this.rules.other.unicodeAlphaNumeric)) return;
        if (!(s[1] || s[2] || "") || !n || this.rules.inline.punctuation.exec(n)) {
          var _n10 = _toConsumableArray(s[0]).length - 1;
          var _r4,
            _i6,
            _l6 = _n10,
            _o4 = 0;
          var _a3 = "*" === s[0][0] ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;
          for (_a3.lastIndex = 0, t = t.slice(-1 * e.length + _n10); null != (s = _a3.exec(t));) {
            if (_r4 = s[1] || s[2] || s[3] || s[4] || s[5] || s[6], !_r4) continue;
            if (_i6 = _toConsumableArray(_r4).length, s[3] || s[4]) {
              _l6 += _i6;
              continue;
            }
            if ((s[5] || s[6]) && _n10 % 3 && !((_n10 + _i6) % 3)) {
              _o4 += _i6;
              continue;
            }
            if (_l6 -= _i6, _l6 > 0) continue;
            _i6 = Math.min(_i6, _i6 + _l6 + _o4);
            var _t9 = _toConsumableArray(s[0])[0].length,
              _a4 = e.slice(0, _n10 + s.index + _t9 + _i6);
            if (Math.min(_n10, _i6) % 2) {
              var _e18 = _a4.slice(1, -1);
              return {
                type: "em",
                raw: _a4,
                text: _e18,
                tokens: this.lexer.inlineTokens(_e18)
              };
            }
            var _c3 = _a4.slice(2, -2);
            return {
              type: "strong",
              raw: _a4,
              text: _c3,
              tokens: this.lexer.inlineTokens(_c3)
            };
          }
        }
      }
    }, {
      key: "codespan",
      value: function codespan(e) {
        var t = this.rules.inline.code.exec(e);
        if (t) {
          var _e19 = t[2].replace(this.rules.other.newLineCharGlobal, " ");
          var _n11 = this.rules.other.nonSpaceChar.test(_e19),
            _s7 = this.rules.other.startingSpaceChar.test(_e19) && this.rules.other.endingSpaceChar.test(_e19);
          return _n11 && _s7 && (_e19 = _e19.substring(1, _e19.length - 1)), {
            type: "codespan",
            raw: t[0],
            text: _e19
          };
        }
      }
    }, {
      key: "br",
      value: function br(e) {
        var t = this.rules.inline.br.exec(e);
        if (t) return {
          type: "br",
          raw: t[0]
        };
      }
    }, {
      key: "del",
      value: function del(e) {
        var t = this.rules.inline.del.exec(e);
        if (t) return {
          type: "del",
          raw: t[0],
          text: t[2],
          tokens: this.lexer.inlineTokens(t[2])
        };
      }
    }, {
      key: "autolink",
      value: function autolink(e) {
        var t = this.rules.inline.autolink.exec(e);
        if (t) {
          var _e20, _n12;
          return "@" === t[2] ? (_e20 = t[1], _n12 = "mailto:" + _e20) : (_e20 = t[1], _n12 = _e20), {
            type: "link",
            raw: t[0],
            text: _e20,
            href: _n12,
            tokens: [{
              type: "text",
              raw: _e20,
              text: _e20
            }]
          };
        }
      }
    }, {
      key: "url",
      value: function url(e) {
        var t;
        if (t = this.rules.inline.url.exec(e)) {
          var _e21, _n13;
          if ("@" === t[2]) _e21 = t[0], _n13 = "mailto:" + _e21;else {
            var _s8;
            do {
              var _this$rules$inline$_b, _this$rules$inline$_b2;
              _s8 = t[0], t[0] = (_this$rules$inline$_b = (_this$rules$inline$_b2 = this.rules.inline._backpedal.exec(t[0])) === null || _this$rules$inline$_b2 === void 0 ? void 0 : _this$rules$inline$_b2[0]) !== null && _this$rules$inline$_b !== void 0 ? _this$rules$inline$_b : "";
            } while (_s8 !== t[0]);
            _e21 = t[0], _n13 = "www." === t[1] ? "http://" + t[0] : t[0];
          }
          return {
            type: "link",
            raw: t[0],
            text: _e21,
            href: _n13,
            tokens: [{
              type: "text",
              raw: _e21,
              text: _e21
            }]
          };
        }
      }
    }, {
      key: "inlineText",
      value: function inlineText(e) {
        var t = this.rules.inline.text.exec(e);
        if (t) {
          var _e22 = this.lexer.state.inRawBlock;
          return {
            type: "text",
            raw: t[0],
            text: t[0],
            escaped: _e22
          };
        }
      }
    }]);
  }();
  var re = /*#__PURE__*/function () {
    function re(t) {
      _classCallCheck(this, re);
      _defineProperty(this, "tokens", void 0);
      _defineProperty(this, "options", void 0);
      _defineProperty(this, "state", void 0);
      _defineProperty(this, "tokenizer", void 0);
      _defineProperty(this, "inlineQueue", void 0);
      this.tokens = [], this.tokens.links = Object.create(null), this.options = t || e.defaults, this.options.tokenizer = this.options.tokenizer || new se(), this.tokenizer = this.options.tokenizer, this.tokenizer.options = this.options, this.tokenizer.lexer = this, this.inlineQueue = [], this.state = {
        inLink: !1,
        inRawBlock: !1,
        top: !0
      };
      var n = {
        other: i,
        block: U.normal,
        inline: J.normal
      };
      this.options.pedantic ? (n.block = U.pedantic, n.inline = J.pedantic) : this.options.gfm && (n.block = U.gfm, this.options.breaks ? n.inline = J.breaks : n.inline = J.gfm), this.tokenizer.rules = n;
    }
    return _createClass(re, [{
      key: "lex",
      value: function lex(e) {
        e = e.replace(i.carriageReturn, "\n"), this.blockTokens(e, this.tokens);
        for (var _e23 = 0; _e23 < this.inlineQueue.length; _e23++) {
          var _t10 = this.inlineQueue[_e23];
          this.inlineTokens(_t10.src, _t10.tokens);
        }
        return this.inlineQueue = [], this.tokens;
      }
    }, {
      key: "blockTokens",
      value: function blockTokens(e) {
        var _this3 = this;
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
        var _loop = function _loop() {
            var _this3$options$extens, _this3$options$extens2;
            var s;
            if ((_this3$options$extens = _this3.options.extensions) !== null && _this3$options$extens !== void 0 && (_this3$options$extens = _this3$options$extens.block) !== null && _this3$options$extens !== void 0 && _this3$options$extens.some(function (n) {
              return !!(s = n.call({
                lexer: _this3
              }, e, t)) && (e = e.substring(s.raw.length), t.push(s), !0);
            })) return 0; // continue
            if (s = _this3.tokenizer.space(e)) {
              e = e.substring(s.raw.length);
              var _n14 = t.at(-1);
              1 === s.raw.length && void 0 !== _n14 ? _n14.raw += "\n" : t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.code(e)) {
              e = e.substring(s.raw.length);
              var _n15 = t.at(-1);
              "paragraph" === (_n15 === null || _n15 === void 0 ? void 0 : _n15.type) || "text" === (_n15 === null || _n15 === void 0 ? void 0 : _n15.type) ? (_n15.raw += "\n" + s.raw, _n15.text += "\n" + s.text, _this3.inlineQueue.at(-1).src = _n15.text) : t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.fences(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.heading(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.hr(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.blockquote(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.list(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.html(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.def(e)) {
              e = e.substring(s.raw.length);
              var _n16 = t.at(-1);
              "paragraph" === (_n16 === null || _n16 === void 0 ? void 0 : _n16.type) || "text" === (_n16 === null || _n16 === void 0 ? void 0 : _n16.type) ? (_n16.raw += "\n" + s.raw, _n16.text += "\n" + s.raw, _this3.inlineQueue.at(-1).src = _n16.text) : _this3.tokens.links[s.tag] || (_this3.tokens.links[s.tag] = {
                href: s.href,
                title: s.title
              });
              return 0; // continue
            }
            if (s = _this3.tokenizer.table(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this3.tokenizer.lheading(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            var r = e;
            if ((_this3$options$extens2 = _this3.options.extensions) !== null && _this3$options$extens2 !== void 0 && _this3$options$extens2.startBlock) {
              var _t11 = 1 / 0;
              var _n17 = e.slice(1);
              var _s9;
              _this3.options.extensions.startBlock.forEach(function (e) {
                _s9 = e.call({
                  lexer: _this3
                }, _n17), "number" == typeof _s9 && _s9 >= 0 && (_t11 = Math.min(_t11, _s9));
              }), _t11 < 1 / 0 && _t11 >= 0 && (r = e.substring(0, _t11 + 1));
            }
            if (_this3.state.top && (s = _this3.tokenizer.paragraph(r))) {
              var _i7 = t.at(-1);
              n && "paragraph" === (_i7 === null || _i7 === void 0 ? void 0 : _i7.type) ? (_i7.raw += "\n" + s.raw, _i7.text += "\n" + s.text, _this3.inlineQueue.pop(), _this3.inlineQueue.at(-1).src = _i7.text) : t.push(s), n = r.length !== e.length, e = e.substring(s.raw.length);
            } else if (s = _this3.tokenizer.text(e)) {
              e = e.substring(s.raw.length);
              var _n18 = t.at(-1);
              "text" === (_n18 === null || _n18 === void 0 ? void 0 : _n18.type) ? (_n18.raw += "\n" + s.raw, _n18.text += "\n" + s.text, _this3.inlineQueue.pop(), _this3.inlineQueue.at(-1).src = _n18.text) : t.push(s);
            } else if (e) {
              var _t12 = "Infinite loop on byte: " + e.charCodeAt(0);
              if (_this3.options.silent) {
                console.error(_t12);
                return 1; // break
              }
              throw new Error(_t12);
            }
          },
          _ret;
        for (this.options.pedantic && (e = e.replace(i.tabCharGlobal, "    ").replace(i.spaceLine, "")); e;) {
          _ret = _loop();
          if (_ret === 0) continue;
          if (_ret === 1) break;
        }
        return this.state.top = !0, t;
      }
    }, {
      key: "inline",
      value: function inline(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        return this.inlineQueue.push({
          src: e,
          tokens: t
        }), t;
      }
    }, {
      key: "inlineTokens",
      value: function inlineTokens(e) {
        var _this4 = this;
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var n = e,
          s = null;
        if (this.tokens.links) {
          var _e24 = Object.keys(this.tokens.links);
          if (_e24.length > 0) for (; null != (s = this.tokenizer.rules.inline.reflinkSearch.exec(n));) _e24.includes(s[0].slice(s[0].lastIndexOf("[") + 1, -1)) && (n = n.slice(0, s.index) + "[" + "a".repeat(s[0].length - 2) + "]" + n.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex));
        }
        for (; null != (s = this.tokenizer.rules.inline.blockSkip.exec(n));) n = n.slice(0, s.index) + "[" + "a".repeat(s[0].length - 2) + "]" + n.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
        for (; null != (s = this.tokenizer.rules.inline.anyPunctuation.exec(n));) n = n.slice(0, s.index) + "++" + n.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);
        var r = !1,
          i = "";
        var _loop2 = function _loop2() {
            var _this4$options$extens, _this4$options$extens2;
            var s;
            if (r || (i = ""), r = !1, (_this4$options$extens = _this4.options.extensions) !== null && _this4$options$extens !== void 0 && (_this4$options$extens = _this4$options$extens.inline) !== null && _this4$options$extens !== void 0 && _this4$options$extens.some(function (n) {
              return !!(s = n.call({
                lexer: _this4
              }, e, t)) && (e = e.substring(s.raw.length), t.push(s), !0);
            })) return 0; // continue
            if (s = _this4.tokenizer.escape(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this4.tokenizer.tag(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this4.tokenizer.link(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this4.tokenizer.reflink(e, _this4.tokens.links)) {
              e = e.substring(s.raw.length);
              var _n19 = t.at(-1);
              "text" === s.type && "text" === (_n19 === null || _n19 === void 0 ? void 0 : _n19.type) ? (_n19.raw += s.raw, _n19.text += s.text) : t.push(s);
              return 0; // continue
            }
            if (s = _this4.tokenizer.emStrong(e, n, i)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this4.tokenizer.codespan(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this4.tokenizer.br(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this4.tokenizer.del(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (s = _this4.tokenizer.autolink(e)) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            if (!_this4.state.inLink && (s = _this4.tokenizer.url(e))) {
              e = e.substring(s.raw.length), t.push(s);
              return 0; // continue
            }
            var l = e;
            if ((_this4$options$extens2 = _this4.options.extensions) !== null && _this4$options$extens2 !== void 0 && _this4$options$extens2.startInline) {
              var _t13 = 1 / 0;
              var _n20 = e.slice(1);
              var _s10;
              _this4.options.extensions.startInline.forEach(function (e) {
                _s10 = e.call({
                  lexer: _this4
                }, _n20), "number" == typeof _s10 && _s10 >= 0 && (_t13 = Math.min(_t13, _s10));
              }), _t13 < 1 / 0 && _t13 >= 0 && (l = e.substring(0, _t13 + 1));
            }
            if (s = _this4.tokenizer.inlineText(l)) {
              e = e.substring(s.raw.length), "_" !== s.raw.slice(-1) && (i = s.raw.slice(-1)), r = !0;
              var _n21 = t.at(-1);
              "text" === (_n21 === null || _n21 === void 0 ? void 0 : _n21.type) ? (_n21.raw += s.raw, _n21.text += s.text) : t.push(s);
            } else if (e) {
              var _t14 = "Infinite loop on byte: " + e.charCodeAt(0);
              if (_this4.options.silent) {
                console.error(_t14);
                return 1; // break
              }
              throw new Error(_t14);
            }
          },
          _ret2;
        for (; e;) {
          _ret2 = _loop2();
          if (_ret2 === 0) continue;
          if (_ret2 === 1) break;
        }
        return t;
      }
    }], [{
      key: "rules",
      get: function get() {
        return {
          block: U,
          inline: J
        };
      }
    }, {
      key: "lex",
      value: function lex(e, t) {
        return new re(t).lex(e);
      }
    }, {
      key: "lexInline",
      value: function lexInline(e, t) {
        return new re(t).inlineTokens(e);
      }
    }]);
  }();
  var ie = /*#__PURE__*/function () {
    function ie(t) {
      _classCallCheck(this, ie);
      _defineProperty(this, "options", void 0);
      _defineProperty(this, "parser", void 0);
      this.options = t || e.defaults;
    }
    return _createClass(ie, [{
      key: "space",
      value: function space(e) {
        return "";
      }
    }, {
      key: "code",
      value: function code(_ref) {
        var _match;
        var e = _ref.text,
          t = _ref.lang,
          n = _ref.escaped;
        var s = (_match = (t || "").match(i.notSpaceStart)) === null || _match === void 0 ? void 0 : _match[0],
          r = e.replace(i.endingNewline, "") + "\n";
        return s ? '<pre><code class="language-' + W(s) + '">' + (n ? r : W(r, !0)) + "</code></pre>\n" : "<pre><code>" + (n ? r : W(r, !0)) + "</code></pre>\n";
      }
    }, {
      key: "blockquote",
      value: function blockquote(_ref2) {
        var e = _ref2.tokens;
        return "<blockquote>\n".concat(this.parser.parse(e), "</blockquote>\n");
      }
    }, {
      key: "html",
      value: function html(_ref3) {
        var e = _ref3.text;
        return e;
      }
    }, {
      key: "heading",
      value: function heading(_ref4) {
        var e = _ref4.tokens,
          t = _ref4.depth;
        return "<h".concat(t, ">").concat(this.parser.parseInline(e), "</h").concat(t, ">\n");
      }
    }, {
      key: "hr",
      value: function hr(e) {
        return "<hr>\n";
      }
    }, {
      key: "list",
      value: function list(e) {
        var t = e.ordered,
          n = e.start;
        var s = "";
        for (var _t15 = 0; _t15 < e.items.length; _t15++) {
          var _n22 = e.items[_t15];
          s += this.listitem(_n22);
        }
        var r = t ? "ol" : "ul";
        return "<" + r + (t && 1 !== n ? ' start="' + n + '"' : "") + ">\n" + s + "</" + r + ">\n";
      }
    }, {
      key: "listitem",
      value: function listitem(e) {
        var t = "";
        if (e.task) {
          var _e$tokens$;
          var _n23 = this.checkbox({
            checked: !!e.checked
          });
          e.loose ? "paragraph" === ((_e$tokens$ = e.tokens[0]) === null || _e$tokens$ === void 0 ? void 0 : _e$tokens$.type) ? (e.tokens[0].text = _n23 + " " + e.tokens[0].text, e.tokens[0].tokens && e.tokens[0].tokens.length > 0 && "text" === e.tokens[0].tokens[0].type && (e.tokens[0].tokens[0].text = _n23 + " " + W(e.tokens[0].tokens[0].text), e.tokens[0].tokens[0].escaped = !0)) : e.tokens.unshift({
            type: "text",
            raw: _n23 + " ",
            text: _n23 + " ",
            escaped: !0
          }) : t += _n23 + " ";
        }
        return t += this.parser.parse(e.tokens, !!e.loose), "<li>".concat(t, "</li>\n");
      }
    }, {
      key: "checkbox",
      value: function checkbox(_ref5) {
        var e = _ref5.checked;
        return "<input " + (e ? 'checked="" ' : "") + 'disabled="" type="checkbox">';
      }
    }, {
      key: "paragraph",
      value: function paragraph(_ref6) {
        var e = _ref6.tokens;
        return "<p>".concat(this.parser.parseInline(e), "</p>\n");
      }
    }, {
      key: "table",
      value: function table(e) {
        var t = "",
          n = "";
        for (var _t16 = 0; _t16 < e.header.length; _t16++) n += this.tablecell(e.header[_t16]);
        t += this.tablerow({
          text: n
        });
        var s = "";
        for (var _t17 = 0; _t17 < e.rows.length; _t17++) {
          var _r5 = e.rows[_t17];
          n = "";
          for (var _e25 = 0; _e25 < _r5.length; _e25++) n += this.tablecell(_r5[_e25]);
          s += this.tablerow({
            text: n
          });
        }
        return s && (s = "<tbody>".concat(s, "</tbody>")), "<table>\n<thead>\n" + t + "</thead>\n" + s + "</table>\n";
      }
    }, {
      key: "tablerow",
      value: function tablerow(_ref7) {
        var e = _ref7.text;
        return "<tr>\n".concat(e, "</tr>\n");
      }
    }, {
      key: "tablecell",
      value: function tablecell(e) {
        var t = this.parser.parseInline(e.tokens),
          n = e.header ? "th" : "td";
        return (e.align ? "<".concat(n, " align=\"").concat(e.align, "\">") : "<".concat(n, ">")) + t + "</".concat(n, ">\n");
      }
    }, {
      key: "strong",
      value: function strong(_ref8) {
        var e = _ref8.tokens;
        return "<strong>".concat(this.parser.parseInline(e), "</strong>");
      }
    }, {
      key: "em",
      value: function em(_ref9) {
        var e = _ref9.tokens;
        return "<em>".concat(this.parser.parseInline(e), "</em>");
      }
    }, {
      key: "codespan",
      value: function codespan(_ref10) {
        var e = _ref10.text;
        return "<code>".concat(W(e, !0), "</code>");
      }
    }, {
      key: "br",
      value: function br(e) {
        return "<br>";
      }
    }, {
      key: "del",
      value: function del(_ref11) {
        var e = _ref11.tokens;
        return "<del>".concat(this.parser.parseInline(e), "</del>");
      }
    }, {
      key: "link",
      value: function link(_ref12) {
        var e = _ref12.href,
          t = _ref12.title,
          n = _ref12.tokens;
        var s = this.parser.parseInline(n),
          r = Y(e);
        if (null === r) return s;
        var i = '<a href="' + (e = r) + '"';
        return t && (i += ' title="' + W(t) + '"'), i += ">" + s + "</a>", i;
      }
    }, {
      key: "image",
      value: function image(_ref13) {
        var e = _ref13.href,
          t = _ref13.title,
          n = _ref13.text;
        var s = Y(e);
        if (null === s) return W(n);
        var r = "<img src=\"".concat(e = s, "\" alt=\"").concat(n, "\"");
        return t && (r += " title=\"".concat(W(t), "\"")), r += ">", r;
      }
    }, {
      key: "text",
      value: function text(e) {
        return "tokens" in e && e.tokens ? this.parser.parseInline(e.tokens) : "escaped" in e && e.escaped ? e.text : W(e.text);
      }
    }]);
  }();
  var le = /*#__PURE__*/function () {
    function le() {
      _classCallCheck(this, le);
    }
    return _createClass(le, [{
      key: "strong",
      value: function strong(_ref14) {
        var e = _ref14.text;
        return e;
      }
    }, {
      key: "em",
      value: function em(_ref15) {
        var e = _ref15.text;
        return e;
      }
    }, {
      key: "codespan",
      value: function codespan(_ref16) {
        var e = _ref16.text;
        return e;
      }
    }, {
      key: "del",
      value: function del(_ref17) {
        var e = _ref17.text;
        return e;
      }
    }, {
      key: "html",
      value: function html(_ref18) {
        var e = _ref18.text;
        return e;
      }
    }, {
      key: "text",
      value: function text(_ref19) {
        var e = _ref19.text;
        return e;
      }
    }, {
      key: "link",
      value: function link(_ref20) {
        var e = _ref20.text;
        return "" + e;
      }
    }, {
      key: "image",
      value: function image(_ref21) {
        var e = _ref21.text;
        return "" + e;
      }
    }, {
      key: "br",
      value: function br() {
        return "";
      }
    }]);
  }();
  var oe = /*#__PURE__*/function () {
    function oe(t) {
      _classCallCheck(this, oe);
      _defineProperty(this, "options", void 0);
      _defineProperty(this, "renderer", void 0);
      _defineProperty(this, "textRenderer", void 0);
      this.options = t || e.defaults, this.options.renderer = this.options.renderer || new ie(), this.renderer = this.options.renderer, this.renderer.options = this.options, this.renderer.parser = this, this.textRenderer = new le();
    }
    return _createClass(oe, [{
      key: "parse",
      value: function parse(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;
        var n = "";
        for (var _s11 = 0; _s11 < e.length; _s11++) {
          var _this$options$extensi;
          var _r6 = e[_s11];
          if ((_this$options$extensi = this.options.extensions) !== null && _this$options$extensi !== void 0 && (_this$options$extensi = _this$options$extensi.renderers) !== null && _this$options$extensi !== void 0 && _this$options$extensi[_r6.type]) {
            var _e26 = _r6,
              _t18 = this.options.extensions.renderers[_e26.type].call({
                parser: this
              }, _e26);
            if (!1 !== _t18 || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(_e26.type)) {
              n += _t18 || "";
              continue;
            }
          }
          var _i8 = _r6;
          switch (_i8.type) {
            case "space":
              n += this.renderer.space(_i8);
              continue;
            case "hr":
              n += this.renderer.hr(_i8);
              continue;
            case "heading":
              n += this.renderer.heading(_i8);
              continue;
            case "code":
              n += this.renderer.code(_i8);
              continue;
            case "table":
              n += this.renderer.table(_i8);
              continue;
            case "blockquote":
              n += this.renderer.blockquote(_i8);
              continue;
            case "list":
              n += this.renderer.list(_i8);
              continue;
            case "html":
              n += this.renderer.html(_i8);
              continue;
            case "paragraph":
              n += this.renderer.paragraph(_i8);
              continue;
            case "text":
              {
                var _r7 = _i8,
                  _l7 = this.renderer.text(_r7);
                for (; _s11 + 1 < e.length && "text" === e[_s11 + 1].type;) _r7 = e[++_s11], _l7 += "\n" + this.renderer.text(_r7);
                n += t ? this.renderer.paragraph({
                  type: "paragraph",
                  raw: _l7,
                  text: _l7,
                  tokens: [{
                    type: "text",
                    raw: _l7,
                    text: _l7,
                    escaped: !0
                  }]
                }) : _l7;
                continue;
              }
            default:
              {
                var _e27 = 'Token with "' + _i8.type + '" type was not found.';
                if (this.options.silent) return console.error(_e27), "";
                throw new Error(_e27);
              }
          }
        }
        return n;
      }
    }, {
      key: "parseInline",
      value: function parseInline(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.renderer;
        var n = "";
        for (var _s12 = 0; _s12 < e.length; _s12++) {
          var _this$options$extensi2;
          var _r8 = e[_s12];
          if ((_this$options$extensi2 = this.options.extensions) !== null && _this$options$extensi2 !== void 0 && (_this$options$extensi2 = _this$options$extensi2.renderers) !== null && _this$options$extensi2 !== void 0 && _this$options$extensi2[_r8.type]) {
            var _e28 = this.options.extensions.renderers[_r8.type].call({
              parser: this
            }, _r8);
            if (!1 !== _e28 || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(_r8.type)) {
              n += _e28 || "";
              continue;
            }
          }
          var _i9 = _r8;
          switch (_i9.type) {
            case "escape":
            case "text":
              n += t.text(_i9);
              break;
            case "html":
              n += t.html(_i9);
              break;
            case "link":
              n += t.link(_i9);
              break;
            case "image":
              n += t.image(_i9);
              break;
            case "strong":
              n += t.strong(_i9);
              break;
            case "em":
              n += t.em(_i9);
              break;
            case "codespan":
              n += t.codespan(_i9);
              break;
            case "br":
              n += t.br(_i9);
              break;
            case "del":
              n += t.del(_i9);
              break;
            default:
              {
                var _e29 = 'Token with "' + _i9.type + '" type was not found.';
                if (this.options.silent) return console.error(_e29), "";
                throw new Error(_e29);
              }
          }
        }
        return n;
      }
    }], [{
      key: "parse",
      value: function parse(e, t) {
        return new oe(t).parse(e);
      }
    }, {
      key: "parseInline",
      value: function parseInline(e, t) {
        return new oe(t).parseInline(e);
      }
    }]);
  }();
  var ae = /*#__PURE__*/function () {
    function ae(t) {
      _classCallCheck(this, ae);
      _defineProperty(this, "options", void 0);
      _defineProperty(this, "block", void 0);
      this.options = t || e.defaults;
    }
    return _createClass(ae, [{
      key: "preprocess",
      value: function preprocess(e) {
        return e;
      }
    }, {
      key: "postprocess",
      value: function postprocess(e) {
        return e;
      }
    }, {
      key: "processAllTokens",
      value: function processAllTokens(e) {
        return e;
      }
    }, {
      key: "provideLexer",
      value: function provideLexer() {
        return this.block ? re.lex : re.lexInline;
      }
    }, {
      key: "provideParser",
      value: function provideParser() {
        return this.block ? oe.parse : oe.parseInline;
      }
    }]);
  }();
  _defineProperty(ae, "passThroughHooks", new Set(["preprocess", "postprocess", "processAllTokens"]));
  var ce = /*#__PURE__*/function () {
    function ce() {
      _classCallCheck(this, ce);
      _defineProperty(this, "defaults", {
        async: !1,
        breaks: !1,
        extensions: null,
        gfm: !0,
        hooks: null,
        pedantic: !1,
        renderer: null,
        silent: !1,
        tokenizer: null,
        walkTokens: null
      });
      _defineProperty(this, "options", this.setOptions);
      _defineProperty(this, "parse", this.parseMarkdown(!0));
      _defineProperty(this, "parseInline", this.parseMarkdown(!1));
      _defineProperty(this, "Parser", oe);
      _defineProperty(this, "Renderer", ie);
      _defineProperty(this, "TextRenderer", le);
      _defineProperty(this, "Lexer", re);
      _defineProperty(this, "Tokenizer", se);
      _defineProperty(this, "Hooks", ae);
      this.use.apply(this, arguments);
    }
    return _createClass(ce, [{
      key: "walkTokens",
      value: function walkTokens(e, t) {
        var _this5 = this;
        var n = [];
        var _iterator3 = _createForOfIteratorHelper(e),
          _step3;
        try {
          var _loop3 = function _loop3() {
            var s = _step3.value;
            switch (n = n.concat(t.call(_this5, s)), s.type) {
              case "table":
                {
                  var _e30 = s;
                  var _iterator4 = _createForOfIteratorHelper(_e30.header),
                    _step4;
                  try {
                    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                      var _s13 = _step4.value;
                      n = n.concat(_this5.walkTokens(_s13.tokens, t));
                    }
                  } catch (err) {
                    _iterator4.e(err);
                  } finally {
                    _iterator4.f();
                  }
                  var _iterator5 = _createForOfIteratorHelper(_e30.rows),
                    _step5;
                  try {
                    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                      var _s14 = _step5.value;
                      var _iterator6 = _createForOfIteratorHelper(_s14),
                        _step6;
                      try {
                        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                          var _e31 = _step6.value;
                          n = n.concat(_this5.walkTokens(_e31.tokens, t));
                        }
                      } catch (err) {
                        _iterator6.e(err);
                      } finally {
                        _iterator6.f();
                      }
                    }
                  } catch (err) {
                    _iterator5.e(err);
                  } finally {
                    _iterator5.f();
                  }
                  break;
                }
              case "list":
                {
                  var _e32 = s;
                  n = n.concat(_this5.walkTokens(_e32.items, t));
                  break;
                }
              default:
                {
                  var _this5$defaults$exten;
                  var _e33 = s;
                  (_this5$defaults$exten = _this5.defaults.extensions) !== null && _this5$defaults$exten !== void 0 && (_this5$defaults$exten = _this5$defaults$exten.childTokens) !== null && _this5$defaults$exten !== void 0 && _this5$defaults$exten[_e33.type] ? _this5.defaults.extensions.childTokens[_e33.type].forEach(function (s) {
                    var r = _e33[s].flat(1 / 0);
                    n = n.concat(_this5.walkTokens(r, t));
                  }) : _e33.tokens && (n = n.concat(_this5.walkTokens(_e33.tokens, t)));
                }
            }
          };
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            _loop3();
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
        return n;
      }
    }, {
      key: "use",
      value: function use() {
        var _this6 = this;
        var t = this.defaults.extensions || {
          renderers: {},
          childTokens: {}
        };
        for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {
          e[_key] = arguments[_key];
        }
        return e.forEach(function (e) {
          var n = _objectSpread({}, e);
          if (n.async = _this6.defaults.async || n.async || !1, e.extensions && (e.extensions.forEach(function (e) {
            if (!e.name) throw new Error("extension name required");
            if ("renderer" in e) {
              var _n24 = t.renderers[e.name];
              t.renderers[e.name] = _n24 ? function () {
                for (var _len2 = arguments.length, t = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                  t[_key2] = arguments[_key2];
                }
                var s = e.renderer.apply(this, t);
                return !1 === s && (s = _n24.apply(this, t)), s;
              } : e.renderer;
            }
            if ("tokenizer" in e) {
              if (!e.level || "block" !== e.level && "inline" !== e.level) throw new Error("extension level must be 'block' or 'inline'");
              var _n25 = t[e.level];
              _n25 ? _n25.unshift(e.tokenizer) : t[e.level] = [e.tokenizer], e.start && ("block" === e.level ? t.startBlock ? t.startBlock.push(e.start) : t.startBlock = [e.start] : "inline" === e.level && (t.startInline ? t.startInline.push(e.start) : t.startInline = [e.start]));
            }
            "childTokens" in e && e.childTokens && (t.childTokens[e.name] = e.childTokens);
          }), n.extensions = t), e.renderer) {
            var _t19 = _this6.defaults.renderer || new ie(_this6.defaults);
            var _loop4 = function _loop4() {
              if (!(_n26 in _t19)) throw new Error("renderer '".concat(_n26, "' does not exist"));
              if (["options", "parser"].includes(_n26)) return 1; // continue
              var s = _n26,
                r = e.renderer[s],
                i = _t19[s];
              _t19[s] = function () {
                for (var _len3 = arguments.length, e = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                  e[_key3] = arguments[_key3];
                }
                var n = r.apply(_t19, e);
                return !1 === n && (n = i.apply(_t19, e)), n || "";
              };
            };
            for (var _n26 in e.renderer) {
              if (_loop4()) continue;
            }
            n.renderer = _t19;
          }
          if (e.tokenizer) {
            var _t20 = _this6.defaults.tokenizer || new se(_this6.defaults);
            var _loop5 = function _loop5() {
              if (!(_n27 in _t20)) throw new Error("tokenizer '".concat(_n27, "' does not exist"));
              if (["options", "rules", "lexer"].includes(_n27)) return 1; // continue
              var s = _n27,
                r = e.tokenizer[s],
                i = _t20[s];
              _t20[s] = function () {
                for (var _len4 = arguments.length, e = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
                  e[_key4] = arguments[_key4];
                }
                var n = r.apply(_t20, e);
                return !1 === n && (n = i.apply(_t20, e)), n;
              };
            };
            for (var _n27 in e.tokenizer) {
              if (_loop5()) continue;
            }
            n.tokenizer = _t20;
          }
          if (e.hooks) {
            var _t21 = _this6.defaults.hooks || new ae();
            var _loop6 = function _loop6() {
              if (!(_n28 in _t21)) throw new Error("hook '".concat(_n28, "' does not exist"));
              if (["options", "block"].includes(_n28)) return 1; // continue
              var s = _n28,
                r = e.hooks[s],
                i = _t21[s];
              ae.passThroughHooks.has(_n28) ? _t21[s] = function (e) {
                if (_this6.defaults.async) return Promise.resolve(r.call(_t21, e)).then(function (e) {
                  return i.call(_t21, e);
                });
                var n = r.call(_t21, e);
                return i.call(_t21, n);
              } : _t21[s] = function () {
                for (var _len5 = arguments.length, e = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
                  e[_key5] = arguments[_key5];
                }
                var n = r.apply(_t21, e);
                return !1 === n && (n = i.apply(_t21, e)), n;
              };
            };
            for (var _n28 in e.hooks) {
              if (_loop6()) continue;
            }
            n.hooks = _t21;
          }
          if (e.walkTokens) {
            var _t22 = _this6.defaults.walkTokens,
              _s15 = e.walkTokens;
            n.walkTokens = function (e) {
              var n = [];
              return n.push(_s15.call(this, e)), _t22 && (n = n.concat(_t22.call(this, e))), n;
            };
          }
          _this6.defaults = _objectSpread(_objectSpread({}, _this6.defaults), n);
        }), this;
      }
    }, {
      key: "setOptions",
      value: function setOptions(e) {
        return this.defaults = _objectSpread(_objectSpread({}, this.defaults), e), this;
      }
    }, {
      key: "lexer",
      value: function lexer(e, t) {
        return re.lex(e, t !== null && t !== void 0 ? t : this.defaults);
      }
    }, {
      key: "parser",
      value: function parser(e, t) {
        return oe.parse(e, t !== null && t !== void 0 ? t : this.defaults);
      }
    }, {
      key: "parseMarkdown",
      value: function parseMarkdown(e) {
        var _this7 = this;
        return function (t, n) {
          var s = _objectSpread({}, n),
            r = _objectSpread(_objectSpread({}, _this7.defaults), s),
            i = _this7.onError(!!r.silent, !!r.async);
          if (!0 === _this7.defaults.async && !1 === s.async) return i(new Error("marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise."));
          if (null == t) return i(new Error("marked(): input parameter is undefined or null"));
          if ("string" != typeof t) return i(new Error("marked(): input parameter is of type " + Object.prototype.toString.call(t) + ", string expected"));
          r.hooks && (r.hooks.options = r, r.hooks.block = e);
          var l = r.hooks ? r.hooks.provideLexer() : e ? re.lex : re.lexInline,
            o = r.hooks ? r.hooks.provideParser() : e ? oe.parse : oe.parseInline;
          if (r.async) return Promise.resolve(r.hooks ? r.hooks.preprocess(t) : t).then(function (e) {
            return l(e, r);
          }).then(function (e) {
            return r.hooks ? r.hooks.processAllTokens(e) : e;
          }).then(function (e) {
            return r.walkTokens ? Promise.all(_this7.walkTokens(e, r.walkTokens)).then(function () {
              return e;
            }) : e;
          }).then(function (e) {
            return o(e, r);
          }).then(function (e) {
            return r.hooks ? r.hooks.postprocess(e) : e;
          })["catch"](i);
          try {
            r.hooks && (t = r.hooks.preprocess(t));
            var _e34 = l(t, r);
            r.hooks && (_e34 = r.hooks.processAllTokens(_e34)), r.walkTokens && _this7.walkTokens(_e34, r.walkTokens);
            var _n29 = o(_e34, r);
            return r.hooks && (_n29 = r.hooks.postprocess(_n29)), _n29;
          } catch (e) {
            return i(e);
          }
        };
      }
    }, {
      key: "onError",
      value: function onError(e, t) {
        return function (n) {
          if (n.message += "\nPlease report this to https://github.com/markedjs/marked.", e) {
            var _e35 = "<p>An error occurred:</p><pre>" + W(n.message + "", !0) + "</pre>";
            return t ? Promise.resolve(_e35) : _e35;
          }
          if (t) return Promise.reject(n);
          throw n;
        };
      }
    }]);
  }();
  var he = new ce();
  function pe(e, t) {
    return he.parse(e, t);
  }
  pe.options = pe.setOptions = function (e) {
    return he.setOptions(e), pe.defaults = he.defaults, n(pe.defaults), pe;
  }, pe.getDefaults = t, pe.defaults = e.defaults, pe.use = function () {
    return he.use.apply(he, arguments), pe.defaults = he.defaults, n(pe.defaults), pe;
  }, pe.walkTokens = function (e, t) {
    return he.walkTokens(e, t);
  }, pe.parseInline = he.parseInline, pe.Parser = oe, pe.parser = oe.parse, pe.Renderer = ie, pe.TextRenderer = le, pe.Lexer = re, pe.lexer = re.lex, pe.Tokenizer = se, pe.Hooks = ae, pe.parse = pe;
  var ue = pe.options,
    ge = pe.setOptions,
    ke = pe.use,
    de = pe.walkTokens,
    fe = pe.parseInline,
    xe = pe,
    be = oe.parse,
    we = re.lex;
  e.Hooks = ae, e.Lexer = re, e.Marked = ce, e.Parser = oe, e.Renderer = ie, e.TextRenderer = le, e.Tokenizer = se, e.getDefaults = t, e.lexer = we, e.marked = pe, e.options = ue, e.parse = xe, e.parseInline = fe, e.parser = be, e.setOptions = ge, e.use = ke, e.walkTokens = de;
});