@using CrestApps.OrchardCore.OpenAI.ViewModels
@using OrchardCore

@model OpenAIConnectionViewModel

<zone Name="Title">
    <h1>@RenderTitleSegments(T["Edit '{0}' Connection", Model.DisplayText])</h1>
</zone>

<form method="post" asp-route-id="@ViewContext.HttpContext.Request.RouteValues["Id"]" enctype="multipart/form-data" class="no-multisubmit">
    @Html.ValidationSummary()

    <div class="@Orchard.GetWrapperClasses()">
        <label asp-for="Name" class="@Orchard.GetLabelClasses()">@T["Name"]</label>
        <div class="@Orchard.GetEndClasses()">
            <input asp-for="Name" class="form-control" disabled />
            <span asp-validation-for="Name" class="text-danger"></span>

            <span class="hint">@T["Connection name."]</span>
        </div>
    </div>

    <div class="@Orchard.GetWrapperClasses()">
        <label asp-for="DisplayText" class="@Orchard.GetLabelClasses()">@T["Display text"]</label>
        <div class="@Orchard.GetEndClasses()">
            <input asp-for="DisplayText" class="form-control" />
            <span asp-validation-for="DisplayText" class="text-danger"></span>

            <span class="hint">@T["The display name."]</span>
        </div>
    </div>

    <div class="@Orchard.GetWrapperClasses()">
        <label asp-for="Endpoint" class="@Orchard.GetLabelClasses()">@T["Endpoint"]</label>
        <div class="@Orchard.GetEndClasses()">
            <input type="url" asp-for="Endpoint" class="form-control" />
            <span asp-validation-for="Endpoint" class="text-danger"></span>

            <span class="hint">@T["The service endpoint."]</span>
        </div>
    </div>

    <div class="@Orchard.GetWrapperClasses()">
        <label asp-for="ApiKey" class="@Orchard.GetLabelClasses()">@T["API key"]</label>
        <div class="@Orchard.GetEndClasses()">
            <input asp-for="ApiKey" class="form-control" autocomplete="new-password" placeholder="@T["A key has been securely stored. Provide a new one to replace the existing key or leave it blank."]" />
            <span asp-validation-for="ApiKey" class="text-danger"></span>
            <span class="hint">@T["The service API key."]</span>
        </div>
    </div>

    <div class="@Orchard.GetWrapperClasses()">
        <label asp-for="DefaultDeploymentName" class="@Orchard.GetLabelClasses()">@T["Deployment/Model name"]</label>
        <div class="@Orchard.GetEndClasses()">
            <input asp-for="DefaultDeploymentName" class="form-control" />
            <span asp-validation-for="DefaultDeploymentName" class="text-danger"></span>
            <span class="hint">@T["The name of the default deployment to use."]</span>
        </div>
    </div>

    <div class="@Orchard.GetWrapperClasses()">
        <div class="@Orchard.GetEndClasses(true)">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" asp-for="IsDefaultConnection">
                <label class="form-check-label" asp-for="IsDefaultConnection">@T["Default connection"]</label>
                <span class="hint dashed">@T["When selected, this connection will be used by default if profiles do not specify a connection."]</span>
            </div>
        </div>
    </div>

    <button class="btn btn-primary" type="submit">@T["Save"]</button>

    <a class="btn btn-secondary cancel"
       role="button"
       asp-route-action="Index">@T["Cancel"]</a>
</form>
