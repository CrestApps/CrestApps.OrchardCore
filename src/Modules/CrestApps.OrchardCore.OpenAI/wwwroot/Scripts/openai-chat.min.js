var openAIChatManager=function(){var e={messageTemplate:'\n        <div class="list-group" id="@messagesContainerHtmlId">\n                <div v-for="(message, index) in messages" :key="index" class="list-group-item">\n                    <div class="d-flex">\n                        <div class="p-2">\n                            <i :class="message.role === \'user\' ? \'fa-solid fa-user fa-2xl text-primary\' : \'fa fa-robot fa-2xl text-success\'"></i>\n                        </div>\n                        <div class="p-2 flex-grow-1" v-html="message.promptHTML || message.prompt"></div>\n                    </div>\n                </div>\n            </div>\n        ',indicatorTemplate:'<div class="spinner-grow spinner-grow-sm" role="status"><span class="visually-hidden">Loading...</span></div>'};return{initialize:function(t){var s=Object.assign({},e,t);s.chatUrl?s.appElementSelector?s.chatContainerElementSelector?s.inputElementSelector?s.sendButtonElementSelector?Vue.createApp({data:function(){return{sessionStarted:!1,messages:[],prompt:""}},methods:{addMessage:function(e){var t=this;this.messages.push(e),this.$nextTick((function(){t.scrollToBottom()}))},handleUserInput:function(e){this.prompt=e.target.value},sendMessage:function(){var e=this,t=this.prompt.trim();if(t){var n={role:"user",prompt:t},r=document.querySelector(s.inputElementSelector),o=document.querySelector(s.sendButtonElementSelector);this.addMessage(n),this.showTypingIndicator(),r.value="",this.prompt="",o.setAttribute("disabled",!0),fetch(s.chatUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sessionId:r.getAttribute("data-session-id"),profileId:r.getAttribute("data-profile-id"),prompt:n.prompt})}).then((function(e){return e.json()})).then((function(t){if(!e.sessionStarted){r.setAttribute("data-session-id",t.sessionId);for(var s=document.getElementsByClassName("profile-generated-prompt"),n=0;n<s.length;n++)s[n].setAttribute("data-session-id",t.sessionId);e.sessionStarted=!0}e.addMessage(t.message),e.hideTypingIndicator(),e.scrollToBottom()})).catch((function(t){console.error("Failed to send the message.",t),e.hideTypingIndicator()}))}},showTypingIndicator:function(){this.addMessage({role:"indicator",promptHTML:s.indicatorTemplate})},hideTypingIndicator:function(){this.messages=this.messages.filter((function(e){return"indicator"!=e.role}))},scrollToBottom:function(){var e=document.querySelector(s.chatContainerElementSelector);e.scrollTop=e.scrollHeight-e.clientHeight}},mounted:function(){var e=this,t=document.querySelector(s.sendButtonElementSelector),n=document.querySelector(s.inputElementSelector),r=document.querySelector(s.placeholderElementSelector);if(n.addEventListener("keyup",(function(e){"Enter"===e.key&&t.dispatchEvent(new Event("click"))})),n.addEventListener("input",(function(s){s.target.value.trim()?t.removeAttribute("disabled"):t.setAttribute("disabled",!0),e.handleUserInput(s)})),t.addEventListener("click",(function(){r&&r.classList.add("d-none"),e.sendMessage()})),s.messages.length){for(var o=0;o<s.messages.length;o++)this.addMessage(s.messages[o]);this.scrollToBottom()}},template:s.messageTemplate}).mount(s.appElementSelector):console.error("The sendButtonElementSelector is required."):console.error("The inputElementSelector is required."):console.error("The chatContainerElementSelector is required."):console.error("The appElementSelector is required."):console.error("The chatUrl is required.")}}}();
